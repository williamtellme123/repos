-- =============================================================================
-- INTRO TO R
-- =============================================================================
-- http://ww2.coastal.edu/kingw/statistics/R-tutorials/objects.html
-- -----------------------------------------------------------------------------
      1. ENVIRONMENT
      2. ASSIGNMENTS
      3. OBJECTS
        a. VECTORS
        b. LISTS
        c. ARRAYS
        d. MATRICES
        e. TABLES
        f. DATA FRAMES
-- -----------------------------------------------------------------------------
--    1. ENVIRONMENT
-- -----------------------------------------------------------------------------
    > setwd("repos/rwork")
    > rm(list=ls())
-- -----------------------------------------------------------------------------
--    2. ASSIGNMENTS
-- -----------------------------------------------------------------------------
    > x = 7
    > x = 9         -- overwrites
    > y <âˆ’ 12       -- same as first
    > 9 -> z        -- same
    > ls()          -- display values
    > rm(list=ls())
-- -----------------------------------------------------------------------------
--    3. OBJECTS
-- -----------------------------------------------------------------------------
    vectors
    lists
    arrays
    matrices
    tables
    data frames

-- -----------------------------------------------------------------------------
--   3a. VECTORS
-- -----------------------------------------------------------------------------
-- Numerical Vector
    > rivers
    [1]  735  320  325  392  524  450 1459  135  465  600  330  336  280  315  870  906
    [17]  202  329  290 1000  600  505 1450  840 1243  890  350  407  286  280  525  720
    [33]  390  250  327  230  265  850  210  630  260  230  360  730  600  306  390  420
    [49]  291  710  340  217  281  352  259  250  470  680  570  350  300  560  900  625
    [65]  332 2348 1171 3710 2315 2533  780  280  410  460  260  255  431  350  760  618
    [81]  338  981 1306  500  696  605  250  411 1054  735  233  435  490  310  460  383
    [97]  375 1270  545  445 1885  380  300  380  377  425  276  210  800  420  350  360
    [113]  538 1100 1205  314  237  610  360  540 1038  424  310  300  444  301  268  620
    [129]  215  652  900  525  246  360  529  500  720  270  430  671 1770

    -- Index used to retrieve
    > rivers[115]
    > rivers[10:20]

    > 10:20                   -- results in range (10,11,12.....20)

    > rivers[c(18,104,168)]   -- concatenate creates a vector

    -- create a vector manually
    x = c(12, 14, 15, 17, 19, 8, 10)

    -- create a vector using a range
    x = 100:110
    x = (100:110)

-- Strings
    > x = c("Bob","Carol","Ted","Alice")
    > x
    [1] "Bob"   "Carol" "Ted"   "Alice"
    > y = c("John","Joy","Fred","Frances")
    > y
    "John","Joy","Fred","Frances"

-- Concatenate string vectors
    > z = c(x, y)
    > z
    [1] "Bob"     "Carol"   "Ted"     "Alice"   "John"    "Joy"     "Fred"
    [8] "Frances"

-- Characters
    > z = c("x", "y")
    > z
    [1] "x" "y"

-- Named Vector (name-value pairs)
    -- ----------------------------------------
    > islands
    Africa       Antarctica             Asia        Australia     Axel Heiberg
             11506             5500            16988             2968               16...........
    -- ----------------------------------------
    > islands["Cuba"]
    Cuba
     43

    > data(islands)                          # writes a copy to your workspace
     > ls()
     [1] "Alice"   "islands" "Joy"     "x"       "y"       "z"

     -- ----------------------------------------
     -- MAP VECTOR
     > km_islands <- islands * 2.59           # probably the best way
     > km_islands["Cuba"]
       Cuba
     111.37
     -- ----------------------------------------
     -- FILTER VECTOR
     > rivers(rivers>500)
     [1]  TRUE FALSE FALSE FALSE  TRUE FALSE  TRUE FALSE .......

     rivers[rivers>500]
     [1]  735  524 1459  600  870  906 1000 ....................

      -- ----------------------------------------
      -- create a vector manually with values
      -- ----------------------------------------
      > x = c("Robert Culp","Natalie Wood","Elliott Gould","Dyan Cannon")
      > x                          # Values are not named yet
      [1] "Robert Culp"   "Natalie Wood"  "Elliott Gould" "Dyan Cannon"

      -- ----------------------------------------
      -- Insert keys (names)
      -- ----------------------------------------
      > names(x) = c("Bob","Carol","Ted","Alice")
      > x                          # Now they are named
                 Bob           Carol             Ted           Alice
       "Robert Culp"  "Natalie Wood" "Elliott Gould"   "Dyan Cannon"

      -- ----------------------------------------
      > x["Alice"]                # name returns name-value pair
             Alice
      "Dyan Cannon"
      -- ----------------------------------------
      > Alice = 4                 # can also use index
      > x[Alice]
             Alice
             "Dyan Cannon"

-- -----------------------------------------------------------------------------
--    3b. LISTS
-- -----------------------------------------------------------------------------
--    Lists are collections of other R objects
      > x = 1:10                          # a vector
      > y = matrix(1:12,nrow=3)           # a matrix
      > z = "Bill"                        # a character variable
      > my.list=list(x,y,z)               # create the list

      -- ----------------------------------------
      -- Named Lists similar to named vectors Here we place values
      > my.list                           # view the list
      [[1]]
          [1]  1  2  3  4  5  6  7  8  9 10
      [[2]]
          [,1] [,2] [,3] [,4]
          [1,]    1    4    7   10
          [2,]    2    5    8   11
          [3,]    3    6    9   12
      [[3]]
          [1] "Bill"
      -- ----------------------------------------
      -- Many R functions return lists indexed by values inside double brackets
      > my.list[[3]]                    # The third item in my.list.
      [1] "Bill"



      -- ----------------------------------------
      -- now provide names (keys)
      > names(my.list) = c("my.vector","my.matrix","my.name")
      > my.list
      $my.vector
       [1]  1  2  3  4  5  6  7  8  9 10

      $my.matrix
           [,1] [,2] [,3] [,4]
      [1,]    1    4    7   10
      [2,]    2    5    8   11
      [3,]    3    6    9   12

      $my.name
      [1] "Bill"

      -- ----------------------------------------
      -- Use names (keys) to access
      > my.list$my.name
      [1] "Bill"

      -- ----------------------------------------
      Data Frames are lists

-- -----------------------------------------------------------------------------
--    3c. ARRAYS
-- -----------------------------------------------------------------------------
    -- constructor takes (values,dim=c(rows,columns,layers)
    > y = array(1:16, dim=c(4,2,2))
    > class(y)
    [1] "array"

    > y

    -- Layer 1
    , , 1
         [,1] [,2]
    [1,]    1    5
    [2,]    2    6
    [3,]    3    7
    [4,]    4    8

    -- layer 2
    , , 2
         [,1] [,2]
    [1,]    9   13
    [2,]   10   14
    [3,]   11   15
    [4,]   12   16


    -- another example
    > x = c(1.26, 3.89, 4.20, 0.76, 2.22, 6.01, 5.29, 1.93, 3.27, 8.29, 2.93, 4.27)
    > y = array(x, dim=c(2,3,2))
    > y
    , , 1
         [,1] [,2] [,3]
    [1,] 1.26 4.20 2.22
    [2,] 3.89 0.76 6.01

    , , 2
         [,1] [,2] [,3]
    [1,] 5.29 3.27 2.93
    [2,] 1.93 8.29 4.27



-- -----------------------------------------------------------------------------
--    3d. MATRICES
-- -----------------------------------------------------------------------------
    -- 2-d array
    -- constructor takes (vector,nrows=3)
    > y = matrix(1:16, nrow=4)
    > class(y)
    [1] "matrix"

    > y
         [,1] [,2] [,3] [,4]
    [1,]    1    5    9   13
    [2,]    2    6   10   14
    [3,]    3    7   11   15
    [4,]    4    8   12   16
    > y[3,2]
    [1] 7

    > y [2,3]
    [1] 10

    > y [1,]
    [1]  1  5  9 13

    > y [,3]
    [1]  9 10 11 12

-- -----------------------------------------------------------------------------
--    3e. TABLES
-- -----------------------------------------------------------------------------
    -- Create frequency tables or crosstabs from raw vector or data frame
    > 100

    -- create raw data (100 random normal dist)
    > y = rnorm(100, mean=100, sd=15)

    -- rounded
    > y = round(y, 0)

    -- Show values (line1), frequencies(line2)
    > table(y)
    y
     64  69  73  74  77  79  80  81  82  84  85  86  87  88  89  90  91  92  93
      1   1   1   1   4   4   2   1   1   2   1   1   1   3   1   1   1   2   1

     94  95  96  97  98  99 100 101 102 103 104 105 106 107 109 110 111 112 113
      4   4   3   3   5   2   6   3   1   5   4   2   2   2   1   2   1   4   3

    114 116 117 118 119 120 123 125 129
      2   2   1   1   2   1   1   2   1

    -- Store the table
    > table(y) -> myTable

    -- plot it
    > barplot(myTable)


    > rm(myTable, y)

-- -----------------------------------------------------------------------------
--    3f. DATA FRAMES
-- -----------------------------------------------------------------------------
      -- List of column vectors
      -- each variable is column vector
      -- each case is row

      > women
           height weight
      1      58    115
      2      59    117
      3      60    120
      4      61    123
      5      62    126
      6      63    129
      7      64    132
      8      65    135
      9      66    139
      10     67    142
      11     68    146
      12     69    150
      13     70    154
      14     71    159
      15     72    164


      -- create a dataframe manually (easier way coming)
      > myFirstDataframe = data.frame(
          name=c("Bob","Fred","Barb","Sue","Jeff"),
          age=c(21,18,18,24,20), hgt=c(70,67,64,66,72),
          wgt=c(180,156,128,118,202),
          race=c("Cauc","Af.Am","Af.Am","Cauc","Asian"),
          year=c("Jr","Fr","Fr","Sr","So"),
          SAT=c(1080,1210,840,1340,880))

      -- list a dataframe
      > myFirstDataframe
          name age hgt wgt  race year  SAT
        1  Bob  21  70 180  Cauc   Jr 1080
        2 Fred  18  67 156 Af.Am   Fr 1210
        3 Barb  18  64 128 Af.Am   Fr  840
        4  Sue  24  66 118  Cauc   Sr 1340
        5 Jeff  20  72 202 Asian   So  880
